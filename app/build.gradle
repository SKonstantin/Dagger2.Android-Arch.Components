apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Integer.parseInt(compileApiVersion)
    defaultConfig {
        applicationId "com.ns.daggernewway"
        minSdkVersion Integer.parseInt(minApiVersion)
        targetSdkVersion Integer.parseInt(compileApiVersion)
        versionCode Integer.parseInt(version_code)
        versionName version_name
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(":dagger2-arch-components")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    implementation "androidx.appcompat:appcompat:$androidx_app_compat_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_app_compat_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"

    def retrofit_ver = "2.4.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_ver"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:$retrofit_coroutines_adapter_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    def mvp_ver = "4.0.7"
    implementation("com.ufkoku.mvp:mvp_autosavable_annotation:$mvp_ver")
    kapt("com.ufkoku.mvp:mvp_autosavable:$mvp_ver")
}

androidExtensions {
    experimental = true
}
